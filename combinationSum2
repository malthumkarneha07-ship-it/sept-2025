def combinatoinSum2(candidates,target):
    def generate(curr_subsets,ans,ind,candidates,target):
        if(target==0):
            ans.append(curr_subsets.cpoy())
            return
        if(taget<0):
            return
        if(ind==len(candidates)):
            return
        curr_subsets.append(candidates[ind])
        generate(ind+1,ans,candidates,target-candidates[nd],curr_subsets)
        curr_subsets.pop()
        for i in range(ind+1,len(candidates)):
            if(candidates[ind]!=candidates[i]):
                ind=i
                generate(ind,ans,curr_subsets,candidates,target)
                break
        ind=0
        ans=[]
        curr_subsets=[]
        candidates.sort()
        generate(ind,ans,curr_subsets,candidates,target)
        return
candidates=list(map(int,input().split()))
print(combinatoinSum(candidates,target))
